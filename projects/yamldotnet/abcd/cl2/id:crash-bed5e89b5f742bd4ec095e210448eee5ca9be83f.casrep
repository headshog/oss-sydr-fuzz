{
  "Date": "2024-04-07T12:55:31.846212+03:00",
  "Uname": "Linux nick 5.15.0-79-generic #86~20.04.2-Ubuntu SMP Mon Jul 17 23:27:17 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux",
  "OS": "Ubuntu",
  "OSRelease": "20.04",
  "Architecture": "amd64",
  "ExecutablePath": "/lf_build_fuzz/bin/release/net8.0/fuzz.dll",
  "ProcEnviron": [
    "IS_DOCKER=1",
    "AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1",
    "PWD=/fuzz",
    "LLVM_CONFIG=llvm-config",
    "HOME=/root",
    "TERM=xterm",
    "SHLVL=1",
    "PATH=/root/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/fuzz/sydr:/root/.go/bin:/root/go/bin:/root/.dotnet/tools",
    "OLDPWD=/fuzz/libfuzzer_work/aflplusplus/afl_main-worker/crashes",
    "GOPATH=/root/go",
    "_=/fuzz/sydr/casr-afl"
  ],
  "ProcCmdline": "dotnet /lf_build_fuzz/bin/release/net8.0/fuzz.dll libfuzzer_work/aflplusplus/afl_main-worker/crashes/id:crash-bed5e89b5f742bd4ec095e210448eee5ca9be83f",
  "Stdin": "",
  "ProcStatus": [],
  "ProcMaps": [],
  "ProcFiles": [],
  "NetworkConnections": [],
  "CrashSeverity": {
    "Type": "NOT_EXPLOITABLE",
    "ShortDescription": "System.ArgumentNullException",
    "Description": "Tag prefix must not be empty. (Parameter 'prefix')",
    "Explanation": ""
  },
  "Stacktrace": [
    "at YamlDotNet.Core.Tokens.TagDirective..ctor(String handle, String prefix, Mark start, Mark end) in /YamlDotNet/YamlDotNet/Core/Tokens/TagDirective.cs:line 81",
    "at YamlDotNet.Core.Scanner.ScanTagDirectiveValue(Mark& start) in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 2441",
    "at YamlDotNet.Core.Scanner.ScanDirective() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 808",
    "at YamlDotNet.Core.Scanner.FetchDirective() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 761",
    "at YamlDotNet.Core.Scanner.FetchNextToken() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 325",
    "at YamlDotNet.Core.Scanner.FetchMoreTokens() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 240",
    "at YamlDotNet.Core.Scanner.MoveNextWithoutConsuming() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 156",
    "at YamlDotNet.Core.Parser.GetCurrentToken() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 50",
    "at YamlDotNet.Core.Parser.ParseDocumentStart(Boolean isImplicit) in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 238",
    "at YamlDotNet.Core.Parser.StateMachine() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 122",
    "at YamlDotNet.Core.Parser.MoveNext() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 107",
    "at YamlDotNet.Core.ParserExtensions.TryConsume[T](IParser parser, T& event) in /YamlDotNet/YamlDotNet/Core/ParserExtensions.cs:line 58",
    "at YamlDotNet.Serialization.Deserializer.Deserialize(IParser parser, Type type) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 129",
    "at YamlDotNet.Serialization.Deserializer.Deserialize(TextReader input, Type type) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 108",
    "at YamlDotNet.Serialization.Deserializer.Deserialize(TextReader input) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 92",
    "at Program.<>c.<Main>b__0_0(ReadOnlySpan`1 stream) in /lf_build_fuzz/ProgramLF.cs:line 43",
    "at SharpFuzz.Fuzzer.LibFuzzer.RunWithoutLibFuzzer(ReadOnlySpanAction action)",
    "at SharpFuzz.Fuzzer.LibFuzzer.Run(ReadOnlySpanAction action, Boolean ignoreExceptions)",
    "at SharpFuzz.Fuzzer.LibFuzzer.Run(ReadOnlySpanAction action)",
    "at Program.Main(String[] args) in /lf_build_fuzz/ProgramLF.cs:line 30"
  ],
  "Registers": {},
  "Disassembly": [],
  "Package": "",
  "PackageVersion": "",
  "PackageArchitecture": "",
  "PackageDescription": "",
  "AsanReport": [],
  "UbsanReport": [],
  "PythonReport": [],
  "GoReport": [],
  "JavaReport": [],
  "RustReport": [],
  "JsReport": [],
  "CSharpReport": [
    "Unhandled exception. System.ArgumentNullException: Tag prefix must not be empty. (Parameter 'prefix')",
    "   at YamlDotNet.Core.Tokens.TagDirective..ctor(String handle, String prefix, Mark start, Mark end) in /YamlDotNet/YamlDotNet/Core/Tokens/TagDirective.cs:line 81",
    "   at YamlDotNet.Core.Scanner.ScanTagDirectiveValue(Mark& start) in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 2441",
    "   at YamlDotNet.Core.Scanner.ScanDirective() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 808",
    "   at YamlDotNet.Core.Scanner.FetchDirective() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 761",
    "   at YamlDotNet.Core.Scanner.FetchNextToken() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 325",
    "   at YamlDotNet.Core.Scanner.FetchMoreTokens() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 240",
    "   at YamlDotNet.Core.Scanner.MoveNextWithoutConsuming() in /YamlDotNet/YamlDotNet/Core/Scanner.cs:line 156",
    "   at YamlDotNet.Core.Parser.GetCurrentToken() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 50",
    "   at YamlDotNet.Core.Parser.ParseDocumentStart(Boolean isImplicit) in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 238",
    "   at YamlDotNet.Core.Parser.StateMachine() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 122",
    "   at YamlDotNet.Core.Parser.MoveNext() in /YamlDotNet/YamlDotNet/Core/Parser.cs:line 107",
    "   at YamlDotNet.Core.ParserExtensions.TryConsume[T](IParser parser, T& event) in /YamlDotNet/YamlDotNet/Core/ParserExtensions.cs:line 58",
    "   at YamlDotNet.Serialization.Deserializer.Deserialize(IParser parser, Type type) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 129",
    "   at YamlDotNet.Serialization.Deserializer.Deserialize(TextReader input, Type type) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 108",
    "   at YamlDotNet.Serialization.Deserializer.Deserialize(TextReader input) in /YamlDotNet/YamlDotNet/Serialization/Deserializer.cs:line 92",
    "   at Program.<>c.<Main>b__0_0(ReadOnlySpan`1 stream) in /lf_build_fuzz/ProgramLF.cs:line 43",
    "   at SharpFuzz.Fuzzer.LibFuzzer.RunWithoutLibFuzzer(ReadOnlySpanAction action)",
    "   at SharpFuzz.Fuzzer.LibFuzzer.Run(ReadOnlySpanAction action, Boolean ignoreExceptions)",
    "   at SharpFuzz.Fuzzer.LibFuzzer.Run(ReadOnlySpanAction action)",
    "   at Program.Main(String[] args) in /lf_build_fuzz/ProgramLF.cs:line 30"
  ],
  "CrashLine": "/YamlDotNet/YamlDotNet/Core/Tokens/TagDirective.cs:81",
  "Source": [
    "    77                 this.Handle = handle;",
    "    78     ",
    "    79                 if (string.IsNullOrEmpty(prefix))",
    "    80                 {",
    "--->81                     throw new ArgumentNullException(nameof(prefix), \"Tag prefix must not be empty.\");",
    "    82                 }",
    "    83     ",
    "    84                 this.Prefix = prefix;",
    "    85             }",
    "    86     "
  ]
}